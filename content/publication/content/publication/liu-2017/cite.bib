@inproceedings{Liu2017,
 abstract = {This paper describes a quantum programming environment, named $Q|SIångle$. It is a platform embedded in the .Net language that supports quantum programming using a quantum extension of the $\mathbfwhile$-language. The framework of the platform includes a compiler of the quantum $\mathbfwhile$-language and a suite of tools for simulating quantum computation, optimizing quantum circuits, and analyzing and verifying quantum programs. Throughout the paper, using $Q|SI\n̊gle$ to simulate quantum behaviors on classical platforms with a combination of components is demonstrated. The scalable framework allows the user to program customized functions on the platform. The compiler works as the core of $Q|SI\rg̊le$ bridging the gap from quantum hardware to quantum software. The built-in decomposition algorithms enable the universal quantum computation on the present quantum hardware.},
 archiveprefix = {arXiv},
 arxivid = {1710.09500},
 author = {Liu, Shusen and Wang, Xin and Zhou, Li and Guan, Ji and Li, Yinan and He, Yang and Duan, Runyao and Ying, Mingsheng},
 booktitle = {Symposium on Real-Time and Hybrid Systems, Lecture Notes in Computer Science},
 doi = {10.1007/978-3-030-01461-2_8},
 eprint = {1710.09500},
 keywords = {program analysis,quantum,quantum compilation,quantum program verification,quantum programming,quantum simulation},
 month = {oct},
 pages = {133--164},
 title = {QSI: A Quantum Programming Environment},
 url = {http://link.springer.com/10.1007/978-3-030-01461-2_8},
 year = {2018}
}

